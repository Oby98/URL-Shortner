continue
 data.group_by{|x| x.strftime("%-d") if x.strftime("%-m") == "#{Time.now.month}" }
 data.group_by{|x| x.strftime("%-d") if x.strftime("%-d") == "#{Time.now.month}" }
dates
lst
continue
clicks
@daily_clicks
continue
@platform_clicks
continue
@url.get_list(platform)
platform = Click.all.where(url_id: @url.id).pluck(:platform)
@browsers_clicks = @url.get_list(browsers)
browsers = Click.all.where(url_id: @url.id).pluck(:browser)
browsers = Click.all.where(url_id: @url.id).pluck(:browser
@daily_clicks = @url.get_dates(clicks)
clicks = Click.all.where(url_id: @url.id).pluck(:created_at)
@url
exit
Url.find(31)
Url.find(31).update_attributes(clicks_count: 9)
Url.find(31)
clicks = Click.all.where(url_id: @url.id).pluck(:url_id,:created_at).count
clicks = Click.all.where(url_id: @url.id).pluck(:url_id,:created_at)
clicks = Click.all.where(url_id: @url.id).pluck(:id,:created_at)
clicks = Click.all.where(url_id: 32).pluck(:id,:created_at)
clicks = Click.all.where(url_id: @url.id).pluck(:id,:created_at)
clicks = Click.all.where(url_id: @url.id).pluck(:id,:created_at).count
clicks = Click.all.where(url_id: @url.id).pluck(:created_at).count
clicks = Click.all.where(url_id: @url.id).pluck(:created_at)
@daily_clicks
continue
@daily_clicks
exit
params
exit
browser.platform.name
browser.name
params
exit
@url.errors[:original_url]
@url.errors
@url.valid?
@url.original_url = "fullstacklabs.notion.site/Ruby-on-Rails-Co"
@url.valid?
@url
exit
@url.short_url = @url.generate_urlexit
Array('A'..'Z').sample(5).join
Array('A'..'Z').sample(5)
Array('A'..'Z')
@url.original_url = data[:original_url]
@url.original = data[:original_url]
data = params[:url]
@url.original = data[:original_url]
@url = Url.new
data = params[:url]
params
